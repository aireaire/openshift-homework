apiVersion: v1
kind: Template
labels:
  template: tasks-jenkins-pipeline
metadata:
  annotations:
    description: Application template for OpenShift Tasks built using a Jenkins Pipeline
    iconClass: icon-jenkins
    tags: jenkins-ci, tomcat,tomcat8,java,jboss,xpaas
    version: 1.2.0
  name: generic-java-jenkins-pipeline
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "${APPLICATION_NAME}", "namespace": "", "kind": "DeploymentConfig"}]'
    labels:
      name: ${APPLICATION_NAME}-pipeline
    name: ${APPLICATION_NAME}-pipeline
    namespace: ${NAMESPACE}
  spec:
    source:
      type: Git
      git:
        uri: ${SOURCE_URL}
        ref: ${SOURCE_REF}
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          openshift.withCluster() {
              env.NAMESPACE = openshift.project()
              env.POM_FILE = env.BUILD_CONTEXT_DIR ? "${env.BUILD_CONTEXT_DIR}/pom.xml" : "pom.xml"
              env.APP_NAME = "${JOB_NAME}".replaceAll(/-build.*/, '')
              echo "Starting Pipeline for ${APP_NAME}..."
              env.BUILD = "${env.NAMESPACE}"
              env.DEV = "${APP_NAME}-dev"
              env.STAGE = "${APP_NAME}-stage"
              env.PROD = "${APP_NAME}-prod"
          }
          pipeline {
              agent {
                  label 'maven'
              }

              stages{
                  stage('build') {
                    steps {
                      openshiftBuild(bldCfg: '${APPLICATION_NAME}', showBuildLogs: 'true')
                    }
                  }

                  stage('Promote from Build to Dev') {
                    steps {
                      tagImage(sourceImageName: env.APP_NAME, sourceImagePath: env.BUILD, toImagePath: env.DEV)
                    }
                  }

                  stage ('Verify Deployment to Dev') {
                    steps {
                      verifyDeployment(projectName: env.DEV, targetApp: env.APP_NAME)
                    }
                  }

                  stage('Promote from Dev to Stage') {
                    steps {
                      tagImage(sourceImageName: env.APP_NAME, sourceImagePath: env.DEV, toImagePath: env.STAGE)
                    }
                  }

                  stage ('Verify Deployment to Stage') {
                    steps {
                      verifyDeployment(projectName: env.STAGE, targetApp: env.APP_NAME)
                    }
                  }

                  stage('Promotion gate') {
                    steps {
                      script {
                        input message: 'Promote application to Production?'
                      }
                    }
                  }

                  stage('Promote from Stage to Prod') {
                    steps {
                      tagImage(sourceImageName: env.APP_NAME, sourceImagePath: env.STAGE, toImagePath: env.PROD)
                    }
                  }

                  stage ('Verify Deployment to Prod') {
                    steps {
                      verifyDeployment(projectName: env.PROD, targetApp: env.APP_NAME)
                    }
                  }
              }
          }
      type: JenkinsPipeline
    triggers:
    - github:
        secret: CzgPZAZ5m2
      type: GitHub
    - generic:
        secret: CzgPZAZ5m2
      type: Generic
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      git:
        ref: ${SOURCE_REF}
        uri: ${SOURCE_URL}
      type: Git
    strategy:
      sourceStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-eap64-openshift:latest
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: kJZLvfQr3hZg
      type: GitHub
    - generic:
        secret: kJZLvfQr3hZg
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
- description: The name for the application.
  name: NAMESPACE
  required: true
- description: Git source URI for application
  name: SOURCE_URL
  required: true
  value: https://github.com/openshiftdemos/openshift-tasks
- description: Git branch/tag reference
  name: SOURCE_REF
  value: master
